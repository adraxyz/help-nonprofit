# Generated by Django 3.0.3 on 2020-05-13 14:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_section', models.CharField(blank=True, choices=[('state_of_art', 'state of art'), ('context', 'context'), ('design', 'design')], help_text='It defines to which part of the project the button belongs.', max_length=100, null=True)),
                ('order', models.PositiveSmallIntegerField(help_text='Position of the button into the section layout.')),
                ('to', models.CharField(blank=True, choices=[('/', '/')], default='/', help_text='Denotes the target route of the link.', max_length=100, null=True)),
                ('href', models.CharField(blank=True, help_text='External link of the button.', max_length=750, null=True)),
                ('target', models.CharField(blank=True, choices=[('_blank', 'blank'), ('_parent', 'parent'), ('_self', 'self'), ('_top', 'top')], help_text='Denotes the target of the href.', max_length=10, null=True)),
                ('text_0', models.CharField(blank=True, help_text='Base text shown inside the button.', max_length=50, null=True)),
                ('text_0_it', models.CharField(blank=True, help_text='Base text shown inside the button.', max_length=50, null=True)),
                ('text_0_en', models.CharField(blank=True, help_text='Base text shown inside the button.', max_length=50, null=True)),
                ('text_1', models.CharField(blank=True, help_text='Additional text shown inside the button.', max_length=50, null=True)),
                ('text_1_it', models.CharField(blank=True, help_text='Additional text shown inside the button.', max_length=50, null=True)),
                ('text_1_en', models.CharField(blank=True, help_text='Additional text shown inside the button.', max_length=50, null=True)),
                ('project', models.ForeignKey(blank=True, help_text='The project to which the button belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buttons', to='projects.Project')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_section', models.CharField(blank=True, choices=[('state_of_art', 'state of art'), ('context', 'context'), ('design', 'design')], help_text='It defines to which part of the project the document belongs.', max_length=100, null=True)),
                ('order', models.PositiveSmallIntegerField(help_text='Position of the document into the section layout.')),
                ('title', models.CharField(blank=True, help_text='Document title.', max_length=150, null=True)),
                ('title_it', models.CharField(blank=True, help_text='Document title.', max_length=150, null=True)),
                ('title_en', models.CharField(blank=True, help_text='Document title.', max_length=150, null=True)),
                ('subtitle', models.CharField(blank=True, help_text='Document subtitle.', max_length=250, null=True)),
                ('subtitle_it', models.CharField(blank=True, help_text='Document subtitle.', max_length=250, null=True)),
                ('subtitle_en', models.CharField(blank=True, help_text='Document subtitle.', max_length=250, null=True)),
                ('description', models.CharField(blank=True, help_text='Document description.', max_length=500, null=True)),
                ('description_it', models.CharField(blank=True, help_text='Document description.', max_length=500, null=True)),
                ('description_en', models.CharField(blank=True, help_text='Document description.', max_length=500, null=True)),
                ('file', models.FileField(help_text='The document file.', upload_to='')),
                ('project', models.ForeignKey(blank=True, help_text='The project to which the document belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='projects.Project')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corporate_full_name', models.CharField(blank=True, help_text='Company full name.', max_length=150, null=True)),
                ('corporate_short_name', models.CharField(blank=True, help_text='Company short name (acronym).', max_length=20, null=True)),
                ('footer_1_col_title', models.CharField(blank=True, help_text='Title of the first footer column.', max_length=50, null=True)),
                ('footer_1_col_title_it', models.CharField(blank=True, help_text='Title of the first footer column.', max_length=50, null=True)),
                ('footer_1_col_title_en', models.CharField(blank=True, help_text='Title of the first footer column.', max_length=50, null=True)),
                ('footer_2_col_title', models.CharField(blank=True, help_text='Title of the second footer column.', max_length=50, null=True)),
                ('footer_2_col_title_it', models.CharField(blank=True, help_text='Title of the second footer column.', max_length=50, null=True)),
                ('footer_2_col_title_en', models.CharField(blank=True, help_text='Title of the second footer column.', max_length=50, null=True)),
                ('footer_3_col_title', models.CharField(blank=True, help_text='Title of the third footer column.', max_length=50, null=True)),
                ('footer_3_col_title_it', models.CharField(blank=True, help_text='Title of the third footer column.', max_length=50, null=True)),
                ('footer_3_col_title_en', models.CharField(blank=True, help_text='Title of the third footer column.', max_length=50, null=True)),
                ('donation_title', models.CharField(blank=True, help_text='Title of the donation section of the third column.', max_length=50, null=True)),
                ('donation_title_it', models.CharField(blank=True, help_text='Title of the donation section of the third column.', max_length=50, null=True)),
                ('donation_title_en', models.CharField(blank=True, help_text='Title of the donation section of the third column.', max_length=50, null=True)),
                ('transparency_title', models.CharField(blank=True, help_text='Title of the transparency section.', max_length=50, null=True)),
                ('transparency_title_it', models.CharField(blank=True, help_text='Title of the transparency section.', max_length=50, null=True)),
                ('transparency_title_en', models.CharField(blank=True, help_text='Title of the transparency section.', max_length=50, null=True)),
                ('footer_1_col_text', models.TextField(blank=True, help_text='Text inside the first footer column.', max_length=500, null=True)),
                ('footer_1_col_text_it', models.TextField(blank=True, help_text='Text inside the first footer column.', max_length=500, null=True)),
                ('footer_1_col_text_en', models.TextField(blank=True, help_text='Text inside the first footer column.', max_length=500, null=True)),
                ('footer_2_col_text', models.TextField(blank=True, help_text='Text inside the second footer column.', max_length=500, null=True)),
                ('footer_2_col_text_it', models.TextField(blank=True, help_text='Text inside the second footer column.', max_length=500, null=True)),
                ('footer_2_col_text_en', models.TextField(blank=True, help_text='Text inside the second footer column.', max_length=500, null=True)),
                ('footer_3_col_text', models.TextField(blank=True, help_text='Text inside the third footer column.', max_length=500, null=True)),
                ('footer_3_col_text_it', models.TextField(blank=True, help_text='Text inside the third footer column.', max_length=500, null=True)),
                ('footer_3_col_text_en', models.TextField(blank=True, help_text='Text inside the third footer column.', max_length=500, null=True)),
                ('subscribe_btn_text', models.CharField(blank=True, help_text='Text inside the newsletter subscribe button.', max_length=50, null=True)),
                ('subscribe_btn_text_it', models.CharField(blank=True, help_text='Text inside the newsletter subscribe button.', max_length=50, null=True)),
                ('subscribe_btn_text_en', models.CharField(blank=True, help_text='Text inside the newsletter subscribe button.', max_length=50, null=True)),
                ('email', models.EmailField(blank=True, help_text='Email address.', max_length=254, null=True)),
                ('fiscal_code', models.CharField(blank=True, help_text='Fiscal code', max_length=16, null=True)),
                ('registered_office', models.CharField(blank=True, help_text='Registered office address.', max_length=150, null=True)),
                ('registered_office_it', models.CharField(blank=True, help_text='Registered office address.', max_length=150, null=True)),
                ('registered_office_en', models.CharField(blank=True, help_text='Registered office address.', max_length=150, null=True)),
                ('document_0', models.ForeignKey(blank=True, help_text='First document exposed in the footer.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doc_0_footer', to='pages.Document')),
                ('document_1', models.ForeignKey(blank=True, help_text='Second document exposed in the footer.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doc_1_footer', to='pages.Document')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_section', models.CharField(blank=True, choices=[('state_of_art', 'state of art'), ('context', 'context'), ('design', 'design')], help_text='It defines to which part of the project the image belongs.', max_length=100, null=True)),
                ('order', models.PositiveSmallIntegerField(help_text='Position of the image into the section layout.')),
                ('content', models.ImageField(help_text='The image file.', upload_to='')),
                ('content_it', models.ImageField(help_text='The image file.', null=True, upload_to='')),
                ('content_en', models.ImageField(help_text='The image file.', null=True, upload_to='')),
                ('alt_content', models.ImageField(blank=True, help_text='The alternate image file.', null=True, upload_to='')),
                ('alt_content_it', models.ImageField(blank=True, help_text='The alternate image file.', null=True, upload_to='')),
                ('alt_content_en', models.ImageField(blank=True, help_text='The alternate image file.', null=True, upload_to='')),
                ('alt', models.CharField(blank=True, help_text='Alternate text for screen readers. Leave empty for decorative images.', max_length=50, null=True)),
                ('alt_it', models.CharField(blank=True, help_text='Alternate text for screen readers. Leave empty for decorative images.', max_length=50, null=True)),
                ('alt_en', models.CharField(blank=True, help_text='Alternate text for screen readers. Leave empty for decorative images.', max_length=50, null=True)),
                ('project', models.ForeignKey(blank=True, help_text="The project to which the image belongs.<br>NOTE: if the file name contains the word 'vertical' it will take 4 cols in the gallery grid, 8 otherwise.", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='projects.Project')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Layout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('error', 'error'), ('default', 'default')], help_text='Layout name.', max_length=30)),
                ('privacy_text', models.TextField(blank=True, help_text='Privacy policy text.', max_length=5000, null=True)),
                ('privacy_text_it', models.TextField(blank=True, help_text='Privacy policy text.', max_length=5000, null=True)),
                ('privacy_text_en', models.TextField(blank=True, help_text='Privacy policy text.', max_length=5000, null=True)),
                ('contact_button', models.ForeignKey(blank=True, help_text='Layout contact button.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_button_layouts', to='pages.Button')),
                ('donation_button', models.ForeignKey(blank=True, help_text='Layout donation button.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='donation_button_layouts', to='pages.Button')),
                ('footer', models.ForeignKey(blank=True, help_text='Layout footer.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='footer_layouts', to='pages.Footer')),
                ('logo', models.ForeignKey(blank=True, help_text='Layout logo image.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logo_layouts', to='pages.Image')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(help_text='Page position in the navigation bar')),
                ('name', models.CharField(choices=[('home', 'home')], help_text='Page name.', max_length=100)),
                ('name_it', models.CharField(choices=[('home', 'home')], help_text='Page name.', max_length=100, null=True)),
                ('name_en', models.CharField(choices=[('home', 'home')], help_text='Page name.', max_length=100, null=True)),
                ('title', models.CharField(help_text='Page title (the one shown on navigation buttons).', max_length=100)),
                ('title_it', models.CharField(help_text='Page title (the one shown on navigation buttons).', max_length=100, null=True)),
                ('title_en', models.CharField(help_text='Page title (the one shown on navigation buttons).', max_length=100, null=True)),
                ('navigation', models.BooleanField(default=False, help_text='Is the page button into the navigation bar?')),
                ('layout', models.ForeignKey(blank=True, help_text='The layout to which the page belongs. .', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='pages.Layout')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(help_text='Position of the section into the page (descending order).')),
                ('title', models.CharField(blank=True, help_text='Section title.', max_length=150, null=True)),
                ('title_it', models.CharField(blank=True, help_text='Section title.', max_length=150, null=True)),
                ('title_en', models.CharField(blank=True, help_text='Section title.', max_length=150, null=True)),
                ('subtitle', models.CharField(blank=True, help_text='Section subtitle.', max_length=500, null=True)),
                ('subtitle_it', models.CharField(blank=True, help_text='Section subtitle.', max_length=500, null=True)),
                ('subtitle_en', models.CharField(blank=True, help_text='Section subtitle.', max_length=500, null=True)),
                ('page', models.ForeignKey(help_text='The page to which the section belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='pages.Page')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Socials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook_link', models.CharField(blank=True, help_text='Link to the facebook page.', max_length=250, null=True)),
                ('instagram_link', models.CharField(blank=True, help_text='Link to the instagram page.', max_length=250, null=True)),
                ('linkedin_link', models.CharField(blank=True, help_text='Link to the linkedin page.', max_length=250, null=True)),
                ('youtube_link', models.CharField(blank=True, help_text='Link to the youtube page.', max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_section', models.CharField(blank=True, choices=[('state_of_art', 'state of art'), ('context', 'context'), ('design', 'design')], help_text='It defines to which part of the project the video belongs.', max_length=100, null=True)),
                ('order', models.PositiveSmallIntegerField(help_text='Position of the video into the section layout.')),
                ('content', models.FileField(help_text='The video file.', upload_to='')),
                ('poster', models.ImageField(blank=True, help_text='Specifies an image to be shown while the video is downloading, or until the user hits the play button. If this is not included, the first frame of the video will be used instead.', null=True, upload_to='')),
                ('project', models.ForeignKey(blank=True, help_text='The project to which the video belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='projects.Project')),
                ('section', models.ForeignKey(blank=True, help_text='The section to which the video belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='pages.Section')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_section', models.CharField(blank=True, choices=[('state_of_art', 'state of art'), ('context', 'context'), ('design', 'design')], help_text='It defines to which part of the project the text belongs.', max_length=100, null=True)),
                ('order', models.PositiveSmallIntegerField(help_text='Position of the text into the section layout.')),
                ('title', models.CharField(blank=True, help_text='Text box title.', max_length=150, null=True)),
                ('title_it', models.CharField(blank=True, help_text='Text box title.', max_length=150, null=True)),
                ('title_en', models.CharField(blank=True, help_text='Text box title.', max_length=150, null=True)),
                ('subtitle', models.CharField(blank=True, help_text='Text box subtitle.', max_length=250, null=True)),
                ('subtitle_it', models.CharField(blank=True, help_text='Text box subtitle.', max_length=250, null=True)),
                ('subtitle_en', models.CharField(blank=True, help_text='Text box subtitle.', max_length=250, null=True)),
                ('content', models.TextField(blank=True, help_text='The text content.', max_length=1000, null=True)),
                ('content_it', models.TextField(blank=True, help_text='The text content.', max_length=1000, null=True)),
                ('content_en', models.TextField(blank=True, help_text='The text content.', max_length=1000, null=True)),
                ('project', models.ForeignKey(blank=True, help_text='The project to which the text belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='projects.Project')),
                ('section', models.ForeignKey(blank=True, help_text='The section to which the text belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='pages.Section')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='layout',
            name='socials',
            field=models.ForeignKey(blank=True, help_text='Layout socials.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='socials_layouts', to='pages.Socials'),
        ),
        migrations.AddField(
            model_name='image',
            name='section',
            field=models.ForeignKey(blank=True, help_text='The section to which the image belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='pages.Section'),
        ),
        migrations.AddField(
            model_name='document',
            name='section',
            field=models.ForeignKey(blank=True, help_text='The section to which the document belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='pages.Section'),
        ),
        migrations.AddField(
            model_name='button',
            name='section',
            field=models.ForeignKey(blank=True, help_text='The section to which the button belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buttons', to='pages.Section'),
        ),
    ]
